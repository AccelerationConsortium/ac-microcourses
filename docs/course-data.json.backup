[
    {
        "course_id": "hello-world",
        "course_title": "üí° Building a 'Hello World' for self-driving labs",
        "description": "Discover the essential principles of self-driving laboratories (SDLs) by building a 'Hello World' SDL from scratch. In this asynchronous, remote course, you will build a self-driving color matcher using dimmable LEDs and a light sensor. This introduction will help you implement hardware/software communication via MQTT, database integration via MongoDB, microcontroller programming with a Raspberry Pi Pico W, and optimization via the Adaptive Experimentation (Ax) Platform. The course will conclude with an expansion of the demo to the research-relevant task of continuously logging temperature, humidity, pressure, light, and accelerometer data.",
        "media_command": "![](./images/clslab-light.gif)",
        "media_caption": "Animated schematic diagram of the 'Hello World' demo: A microcontroller controls the LEDs and reads sensor data. The difference between the target color and the measured color is fed into an adaptive experimentation algorithm, and the process repeats itself.",
        "recommended_prerequisites": "For participants to complete this course within the expected timeframe (approx. 20 hours), intermediate proficiency in Python programming is recommended.",
        "learning_outcomes": [
            "Describe key terms and principles of self-driving labs",
            "Send commands and receive sensor data over WiFi using standard frameworks such as MQTT",
            "Store experiment configurations and results in a MongoDB database",
            "Implement software on a microcontroller to adjust device power and read sensor data",
            "Adapt a Bayesian optimization script from packages such as the Ax Platform to iteratively suggest new colors to try",
            "Implement workflow orchestration for a color experiment using packages such as Covalent",
            "Modify the system to record temperature, humidity, barometric pressure, and accelerometer measurements"
        ],
        "competencies_skills": [
            "Basic self-driving lab literacy",
            "Database management",
            "Workflow orchestration",
            "Bayesian optimization",
            "Microcontrollers and sensors",
            "Hardware/software communication"
        ],
        "modules": [
            {
                "module_name": "Running the SDL demo",
                "topics": [
                    "Database management",
                    "Bayesian optimization",
                    "Microcontrollers"
                ],
                "learning_outcomes": [
                    "Describe key terms and principles of self-driving labs",
                    "Preview an end-to-end self-driving lab",
                    "Upload software to a microcontroller"
                ],
                "assessments": [
                    "Check for matched terms with definitions in Quercus",
                    "Ask questions that demonstrate they finished reading the manuscript, for example, what platforms are used for each of the steps. This could be another matching from the topics to the platforms as a complement to the previous quiz",
                    "Check that source code from the zip file is copy-pasted into a certain file", // "Optionally, upload a picture of the assembled CLSLab:Light",
                    "Check that a 'test' demo database entry exists that contains their course ID or something specific to them",
                ]
            },
            {
                "module_name": "Blink and Read",
                "topics": [
                    "Microcontrollers",
                    "MicroPython"
                ],
                "learning_outcomes": [
                    "Write MicroPython scripts",
                    "Use a microcontroller"
                ],
                "assessments": [
                    "Check that some command line output (that users copy-pasted from Thonny terminal) matches the answer key for a script that blinks an LED",
                    "Check that some command line output (that users copy-pasted from Thonny terminal) matches the answer key for a script that reads the sensor data"
                ]
            },
            {
                "module_name": "Bayesian optimization",
                "topics": [
                    "Design of experiments",
                    "Data visualization"
                ],
                "learning_outcomes": [
                    "Compare grid and random search vs. Bayesian optimization",
                    "Visualize optimization efficiency"
                ],
                "assessments": [
                    "Match terms with definitions",
                    "Verify that the filled in code for grid search with a specific set of seeds and a fixed Ax version reaches a particular outcome (i.e., verify that two floats match).",
                    "Verify that the filled in code for random search with a specific set of seeds and a fixed Ax version reaches a particular outcome (i.e., match the numbers).",
                    "Verify that the filled in code for Bayesian optimization with a specific set of seeds and a fixed Ax version reaches a particular outcome (i.e., match the numbers).",
                    "Verify that the data to be placed in a matplotlib figure for 'best result so far' vs. iteration number matches the answer key for a specific set of seeds",
                ]
            },
            {
                "module_name": "Device communication",
                "topics": [
                    "MQTT",
                    "Broker/client"
                ],
                "learning_outcomes": [
                    "Send commands to a microcontroller",
                    "Receive sensor data from a microcontroller"
                ],
                "assessments": [
                    "Match terms with definitions",
                    "Check that users added personal HiveMQ credentials as repository secrets",
                    "Verify that a message can be sent using the HiveMQ secrets that were supplied, and that it's not the one provided publicly by me",
                    "",
                ]
            },
            {
                "module_name": "Logging data",
                "topics": [
                    "MongoDB",
                    "Database management"
                ],
                "learning_outcomes": [
                    "Set up a MongoDB account and database",
                    "Upload data directly from microcontroller"
                ],
                "assessments": [
                    "Check that users added personal MongoDB credentials as repository secrets",
                    "Verify that an entry can be added using the MongoDB secrets and that it's not the one provided publicly by me",
                    "Verify that ",
                ]
            },
            {
                "module_name": "Module integration",
                "topics": [
                    "Systems design"
                ],
                "learning_outcomes": [
                    "Connect the pieces to complete the SDL demo"
                ]
            },
            {
                "module_name": "Lab sensor system",
                "topics": [
                    "Environmental sensors"
                ],
                "learning_outcomes": [
                    "Continuously log temperature, humidity, vibration, etc."
                ]
            }
        ],
        "course_assessments_and_grading_schema": "Each module will contain the following: 1. üß≠ A guided notebook tutorial (ungraded) 2. üìì A standalone notebook assignment (graded, 5 points) 3. üõ†Ô∏è A mini project (graded, 10 points)"
    },
    {
        "course_id": "data-science",
        "course_title": "üìä Data science for self-driving labs",
        "description": "Unleash the power of data science in the realm of self-driving laboratories. This remote, asynchronous course empowers you to apply data science concepts to materials discovery tasks. You'll create Bayesian optimization scripts using the Ax Platform, explore advanced optimization topics, and use the Honegumi template generator to create an advanced optimization setup for a materials discovery task. Additionally, you'll learn to share your findings by uploading datasets to FigShare, creating benchmark models with scikit-learn, and hosting models on HuggingFace.",
        "recommended_prerequisites": "{{hello-world}}",
        "learning_outcomes": [
            "Describe a materials discovery task using data science language and concepts",
            "Adapt a Bayesian optimization script to find an optimal chocolate chip cookie recipe",
            "Judiciously choose an advanced optimization setup that matches a materials discovery task",
            "Programatically upload a completed dataset to Figshare, create a benchmark model, and host it on HuggingFace"
        ],
        "competencies_skills": [
            "Data science literacy",
            "Bayesian optimization",
            "Advanced Bayesian optimization",
            "Workflow orchestration",
            "Benchmarking"
        ],
        "modules": [
            {
                "module_name": "Gentle intro to Bayesian optimization",
                "topics": [
                    "Design of experiments",
                    "Quasi-random search methods",
                    "Bayesian optimization",
                    "Expected improvement (EI)",
                    "Ax Platform",
                    "Honegumi template generator"
                ],
                "learning_outcomes": [
                    "Describe a materials discovery task using data science language and concepts",
                    "Adapt a Bayesian optimization script to find an optimal chocolate chip cookie recipe"
                ]
            },
            // ...
        ],
        "course_assessments_and_grading_schema": {
            "format": "Building a 'Hello World' for Self-Driving Labs",
            "link": "https://ac-microcourses.readthedocs.io/en/latest/certificate-framework.html#course-assessments-and-grading-schema"
        }
    }
